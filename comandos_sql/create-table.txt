CREATE DATABASE sigaplus;

CREATE TABLE IF NOT EXISTS sigaplus.Coordenador (
	pk_cpf_coordenador varchar(11) PRIMARY KEY,
    idade_coordenador int,
    sexo_coordenador varchar(1),
    senha_coordenador varchar(50) NOT NULL CHECK (LENGTHB(senha_coordenador) > 7),
    login_coordenador varchar(50) NOT NULL UNIQUE ,
    nome_coordenador varchar(100) NOT NULL,
    id_coordenador varchar(10) NOT NULL UNIQUE,
    data_inicio_curso_coordenador date

);

CREATE TABLE IF NOT EXISTS sigaplus.Reitor(
	pk_cpf_reitor varchar(11) PRIMARY KEY,
    idade_reitor int,
    sexo_reitor char(1),
    senha_reitor varchar(20) NOT NULL CHECK (LENGTHB(senha_reitor) > 7),
    login_reitor varchar(20) NOT NULL UNIQUE,
    nome_reitor varchar(50),
    codigo_reitor varchar(10) NOT NULL UNIQUE,
    data_entrada_reitor_universidade date
);

CREATE TABLE IF NOT EXISTS sigaplus.Diretor(
	pk_cpf_diretor varchar(11) PRIMARY KEY,
    idade_diretor int CHECK (idade_diretor > 35),
    sexo_diretor char(1),
    senha_diretor varchar(20) NOT NULL CHECK (LENGTHB(senha_diretor) > 7),
    login_diretor varchar(20) NOT NULL UNIQUE,
    nome_diretor varchar(50),
    numero_diretor varchar(10) NOT NULL UNIQUE,
    data_inicio_instituto_diretor date
);

CREATE TABLE IF NOT EXISTS sigaplus.Chefe(
	pk_cpf_chefe varchar(11) PRIMARY KEY,
    idade_chefe int,
    sexo_chefe char(1),
    senha_chefe varchar(20) NOT NULL CHECK (LENGTHB(senha_chefe) > 7),
    login_chefe varchar(20) NOT NULL UNIQUE,
    nome_chefe varchar(50) NOT NULL,
    codigo_chefe varchar(10) NOT NULL UNIQUE,
    data_entrada_dept_chefe date
);

CREATE TABLE IF NOT EXISTS sigaplus.Universidade(
	pk_numero_emec_univ varchar(10) PRIMARY KEY,
    fk_cpf_reitor varchar(11),
    end_rua_univ varchar(30),
	end_numero_univ varchar(10),
	end_bairro_univ varchar(30),
	end_cidade_univ varchar(30),
	end_estado_univ varchar(30),
	end_cep_univ varchar(8) NOT NULL,
	nome_univ varchar(30) NOT NULL,
	data_fundacao_univ date NOT NULL,
    CONSTRAINT FOREIGN KEY (fk_cpf_reitor) REFERENCES Reitor(pk_cpf_reitor)  ON DELETE SET NULL ON UPDATE SET NULL
);

CREATE TABLE IF NOT EXISTS sigaplus.Instituto(
	pk_codigo_instituto varchar(10) PRIMARY KEY,
    fk_cpf_diretor varchar(11),
    fk_numero_emec_univ varchar(10),
    nome_instituto varchar(30) NOT NULL,
    data_fundacao_instituto date,
   CONSTRAINT  FOREIGN KEY (fk_cpf_diretor) REFERENCES Diretor(pk_cpf_diretor) ON DELETE SET NULL ON UPDATE SET NULL,
    CONSTRAINT FOREIGN KEY (fk_numero_emec_univ) REFERENCES Universidade(pk_numero_emec_univ) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS sigaplus.Departamento (
	pk_codigo_dept varchar(10) PRIMARY KEY,
    fk_cpf_chefe varchar(11),
    fk_codigo_instituto varchar(10),
	end_rua_dept varchar(30),
	end_numero_dept varchar(10),
	end_bairro_dept varchar(30),
	end_cidade_dept varchar(30),
	end_estado_dept varchar(30),
	end_cep_dept varchar(8) NOT NULL,
	nome_dept varchar(30) NOT NULL,
	data_fundacao_dept date,
    CONSTRAINT FOREIGN KEY (fk_cpf_chefe) REFERENCES Chefe(pk_cpf_chefe) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (fk_codigo_instituto) REFERENCES Instituto(pk_codigo_instituto) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS sigaplus.Curso (
	pk_codigo_curso varchar(10) PRIMARY KEY,
    fk_codigo_dept varchar(10),
    fk_cpf_coordenador varchar(11),
    nome_curso varchar(50) NOT NULL,
    qtd_semestres_curso int NOT NULL CHECK (qtd_semestres_curso > 0 AND qtd_semestres_curso < 17),
    turno_curso varchar(20),
    CONSTRAINT FOREIGN KEY (fk_codigo_dept) REFERENCES Departamento(pk_codigo_dept) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (fk_cpf_coordenador) REFERENCES Coordenador(pk_cpf_coordenador) ON DELETE SET NULL ON UPDATE SET NULL
);

CREATE TABLE IF NOT EXISTS sigaplus.Grade(
	pk_codigo_grade varchar(10) PRIMARY KEY,
    fk_codigo_curso varchar(10),
    ano_registro_grade varchar(4),
    CONSTRAINT FOREIGN KEY (fk_codigo_curso) REFERENCES Curso(pk_codigo_curso) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS sigaplus.Professor(
	pk_cpf_professor varchar(11) PRIMARY KEY,
	fk_codigo_dept varchar(10),
	sexo_professor char(1),
	idade_professor int,
	senha_professor varchar(20) NOT NULL CHECK (LENGTHB(senha_professor) > 7),
	login_professor varchar(20) NOT NULL UNIQUE,
	nome_professor varchar(50) NOT NULL,
	codigo_professor varchar(10) NOT NULL UNIQUE,
	formacao_professor varchar(50) CHECK (formacao_professor IN ('MESTRADO', 'DOUTORADO')),
	data_inicio_professor_departamento date,
	horas_professor_departamento int,
    CONSTRAINT FOREIGN KEY (fk_codigo_dept) REFERENCES Departamento(pk_codigo_dept) ON DELETE SET NULL ON UPDATE SET NULL
);

CREATE TABLE IF NOT EXISTS sigaplus.Disciplina(
	pk_codigo_disciplina varchar(10) PRIMARY KEY,
    nome_disciplina varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS sigaplus.Turma(
	pk_codigo_turma varchar(10) PRIMARY KEY,
    fk_cpf_professor varchar(11),
    fk_codigo_disciplina varchar(10),
    turno_turma varchar(20),
    capacidade_turma int NOT NULL CHECK (capacidade_turma > 9 AND capacidade_turma < 101),
    CONSTRAINT FOREIGN KEY (fk_cpf_professor) REFERENCES Professor(pk_cpf_professor) ON DELETE SET NULL ON UPDATE SET NULL,
     CONSTRAINT FOREIGN KEY (fk_codigo_disciplina) REFERENCES Disciplina(pk_codigo_disciplina) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS sigaplus.Secretaria(
	pk_cpf_secretaria varchar(11) PRIMARY KEY,
	fk_codigo_dept varchar(10),
    idade_secretaria int,
    sexo_secretaria char(2),
    senha_secretaria varchar(20) NOT NULL CHECK (LENGTHB(senha_secretaria) > 7),
    login_secretaria varchar(20) NOT NULL UNIQUE,
	nome_secretaria varchar(30),
    registro_secretaria varchar(10) NOT NULL UNIQUE,
    setor_secretaria varchar(20),
	CONSTRAINT FOREIGN KEY (fk_codigo_dept) REFERENCES Departamento(pk_codigo_dept) ON DELETE CASCADE ON UPDATE CASCADE
);




CREATE TABLE IF NOT EXISTS sigaplus.Aluno(
	pk_cpf_aluno varchar(11) PRIMARY KEY,
    fk_codigo_curso varchar(10),
    idade_aluno int CHECK (idade_aluno > 18),
    sexo_aluno char(1),
    senha_aluno varchar(20) NOT NULL CHECK (LENGTHB(senha_aluno) > 7),
    login_aluno varchar(20) NOT NULL UNIQUE,
    nome_aluno varchar(50) NOT NULL,
    data_entrada_aluno_curso date,
    matricula_aluno varchar(20) NOT NULL UNIQUE,
    formacao_aluno varchar(50), 
    status_matricula_aluno varchar(20),
   CONSTRAINT FOREIGN KEY (fk_codigo_curso) REFERENCES Curso(pk_codigo_curso) ON DELETE SET NULL ON UPDATE SET NULL
);



CREATE TABLE IF NOT EXISTS sigaplus.Bolsa(
	pk_codigo_bolsa varchar(10) PRIMARY KEY,
	fk_numero_emec_univ varchar(10),
    remuneracao_bolsa float NOT NULL,
    qtd_semestres_bolsa int,
    situacao_bolsa varchar(10),
	CONSTRAINT FOREIGN KEY(fk_numero_emec_univ) REFERENCES Universidade(pk_numero_emec_univ) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS sigaplus.Aluno_Turma(
	pk_fk_cpf_aluno varchar(11),
	pk_fk_codigo_turma varchar(10),
	nota_aluno float NOT NULL CHECK (nota_aluno >= 0 AND nota_aluno <=100),
    PRIMARY KEY(pk_fk_cpf_aluno, pk_fk_codigo_turma),
	CONSTRAINT FOREIGN KEY(pk_fk_cpf_aluno) REFERENCES Aluno(pk_cpf_aluno) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(pk_fk_codigo_turma) REFERENCES Turma(pk_codigo_turma) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS sigaplus.Grade_Disciplina(
	pk_fk_codigo_grade varchar(10),
	pk_fk_codigo_disciplina varchar(10),
    PRIMARY KEY(pk_fk_codigo_grade, pk_fk_codigo_disciplina),
	CONSTRAINT FOREIGN KEY(pk_fk_codigo_grade) REFERENCES Grade(pk_codigo_grade) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(pk_fk_codigo_disciplina) REFERENCES Disciplina(pk_codigo_disciplina) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS sigaplus.Aluno_Bolsa(
	pk_fk_codigo_bolsa varchar(10),
	pk_fk_cpf_aluno varchar(11),
    data_cadastro_aluno_bolsa date,
    PRIMARY KEY(pk_fk_codigo_bolsa, pk_fk_cpf_aluno),
	CONSTRAINT FOREIGN KEY(pk_fk_codigo_bolsa) REFERENCES Bolsa(pk_codigo_bolsa) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(pk_fk_cpf_aluno) REFERENCES Aluno(pk_cpf_aluno) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS sigaplus.Historico(
    pk_numero_historico varchar(10),
    fk_cpf_aluno varchar(11),
    IRA_historico float,
    CONSTRAINT FOREIGN KEY(fk_cpf_aluno) REFERENCES Aluno(pk_cpf_aluno) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TRIGGER sigaplus.atualiza_IRA 
AFTER UPDATE ON aluno_turma
FOR EACH ROW
UPDATE historico 
SET IRA_historico=(SELECT AVG(nota_aluno) 
FROM aluno_turma at 
INNER JOIN aluno a 
ON (at.pk_fk_cpf_aluno=a.pk_cpf_aluno AND a.pk_cpf_aluno=OLD.pk_fk_cpf_aluno))
WHERE fk_cpf_aluno=OLD.pk_fk_cpf_aluno;

CREATE TRIGGER sigaplus.criar_historico
AFTER INSERT ON aluno
FOR EACH ROW
INSERT INTO historico (fk_cpf_aluno, IRA_historico)
VALUES (NEW.pk_cpf_aluno, 0);

CREATE INDEX indice_aluno_matricula_ativa ON sigaplus.Aluno (pk_cpf_aluno, status_matricula_aluno);

